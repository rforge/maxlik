
R version 3.1.2 (2014-10-31) -- "Pumpkin Helmet"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ### Test the 'finalHessian' argument of optimization routines
> 
> library(maxLik)
Loading required package: miscTools

Please cite the 'maxLik' package as:
Henningsen, Arne and Toomet, Ott (2011). maxLik: A package for maximum likelihood estimation in R. Computational Statistics 26(3), 443-458. DOI 10.1007/s00180-010-0217-1.

If you have questions, suggestions, or comments regarding the 'maxLik' package, please use a forum or 'tracker' at maxLik's R-Forge site:
https://r-forge.r-project.org/projects/maxlik/
> set.seed( 4 )
> 
>                            # log-likelihood function, gradient, and Hessian for 1-parameter case (exponential distribution)
> ll1i <- function(theta) {
+    if(!all(theta > 0))
+        return(NA)
+    log(theta) - theta*t
+ }
> ll1 <- function(theta) sum( log(theta) - theta*t )
> gr1i <- function(theta) 1/theta - t
> gr1 <- function(theta) sum( 1/theta - t )
> hs1 <- function(theta) -100/theta^2
> t <- rexp( 100, 2 )
> 
> ## the same functions for 2-variable case (normal distribution)
> ll2 <- function( param ) {
+    ## log likelihood function
+    mu <- param[ 1 ]
+    sigma <- param[ 2 ]
+    if(!(sigma > 0))
+        return(NA)
+                            # to avoid warnings in the output
+    N <- length( x )
+    llValue <- -0.5 * N * log( 2 * pi ) - N * log( sigma ) -
+       0.5 * sum( ( x - mu )^2 / sigma^2 )
+    return( llValue )
+ }
> 
> ## log likelihood function (individual observations)
> ll2i <- function( param ) {
+    mu <- param[ 1 ]
+    sigma <- param[ 2 ]
+    if(!(sigma > 0))
+        return(NA)
+                            # to avoid warnings in the output
+    llValues <- -0.5 * log( 2 * pi ) - log( sigma ) -
+       0.5 * ( x - mu )^2 / sigma^2
+    return( llValues )
+ }
> 
> gr2 <- function( param ) {
+    ## function to calculate analytical gradients
+    mu <- param[ 1 ]
+    sigma <- param[ 2 ]
+    N <- length( x )
+    llGrad <- c( sum( ( x - mu ) / sigma^2 ),
+       - N / sigma + sum( ( x - mu )^2 / sigma^3 ) )
+    return( llGrad )
+ }
> 
> ## function to calculate analytical gradients (individual observations)
> gr2i <- function( param ) {
+    mu <- param[ 1 ]
+    sigma <- param[ 2 ]
+    llGrads <- cbind( ( x - mu ) / sigma^2,
+       - 1 / sigma + ( x - mu )^2 / sigma^3 )
+    return( llGrads )
+ }
> 
> ## function to calculate analytical Hessians
> hs2 <- function( param ) {
+    mu <- param[ 1 ]
+    sigma <- param[ 2 ]
+    N <- length( x )
+    llHess <- matrix( c(
+       N * ( - 1 / sigma^2 ),
+       sum( - 2 * ( x - mu ) / sigma^3 ),
+       sum( - 2 * ( x - mu ) / sigma^3 ),
+       N / sigma^2 + sum( - 3 * ( x - mu )^2 / sigma^4 ) ),
+       nrow = 2, ncol = 2 )
+    return( llHess )
+ }
> x <- rnorm(100, 1, 2)
> 
> 
> ## NR
> # Estimate with only function values (single parameter)
> a <- maxLik( ll1i, gr1i, start = 1, method = "NR" )
> summary(a )
--------------------------------------------
Maximum Likelihood estimation
Newton-Raphson maximisation, 5 iterations
Return code 1: gradient close to zero
Log-Likelihood: -25.05386 
1  free parameters
Estimates:
     Estimate Std. error t value Pr(> t)    
[1,]   2.1159     0.2116      10  <2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
--------------------------------------------
> b <- maxLik( ll1i, gr1i, start = 1, method = "NR", finalHessian="bhhh")
>                            # should issue a warning as BHHH not possible
> summary(b )
--------------------------------------------
Maximum Likelihood estimation
Newton-Raphson maximisation, 5 iterations
Return code 1: gradient close to zero
Log-Likelihood: -25.05386 
1  free parameters
Estimates:
     Estimate Std. error t value Pr(> t)    
[1,]   2.1159     0.2145   9.863  <2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
--------------------------------------------
> c <- maxLik( ll1i, gr1i, start = 1, method = "NR", finalHessian=FALSE)
> summary(c)
--------------------------------------------
Maximum Likelihood estimation
Newton-Raphson maximisation, 5 iterations
Return code 1: gradient close to zero
Log-Likelihood: -25.05386 
1  free parameters
Estimates:
     Estimate t value Pr(> t)
[1,]    2.116      NA      NA
--------------------------------------------
> ## (vector parameter)
> a <- maxLik( ll2, gr2, start = c(0,1), method = "NR" )
> summary(a )
--------------------------------------------
Maximum Likelihood estimation
Newton-Raphson maximisation, 7 iterations
Return code 1: gradient close to zero
Log-Likelihood: -212.7524 
2  free parameters
Estimates:
     Estimate Std. error t value  Pr(> t)    
[1,]   0.8532     0.2031   4.201 2.66e-05 ***
[2,]   2.0311     0.1436  14.142  < 2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
--------------------------------------------
> b <- maxLik( ll2, gr2, start = c(0,1), method = "NR", finalHessian="bhhh")
Warning message:
In maxNRCompute(fn = logLikAttr, fnOrig = fn, gradOrig = grad, hessOrig = hess,  :
  For computing the final Hessian by 'BHHH' method, the log-likelihood or gradient must be supplied by observations
>                            # should issue a warning as BHHH not possible
> summary(b )
--------------------------------------------
Maximum Likelihood estimation
Newton-Raphson maximisation, 7 iterations
Return code 1: gradient close to zero
Log-Likelihood: -212.7524 
2  free parameters
Estimates:
     Estimate t value Pr(> t)
[1,]   0.8532      NA      NA
[2,]   2.0311      NA      NA
--------------------------------------------
> c <- maxLik( ll2, gr2, start = c(0,1), method = "NR", finalHessian=FALSE)
> summary(c)
--------------------------------------------
Maximum Likelihood estimation
Newton-Raphson maximisation, 7 iterations
Return code 1: gradient close to zero
Log-Likelihood: -212.7524 
2  free parameters
Estimates:
     Estimate t value Pr(> t)
[1,]   0.8532      NA      NA
[2,]   2.0311      NA      NA
--------------------------------------------
> 
> ## BFGSR
> # Estimate with only function values (single parameter)
> a <- maxLik( ll1i, gr1i, start = 1, method = "BFGSR" )
> summary(a )
--------------------------------------------
Maximum Likelihood estimation
BFGSR maximization, 26 iterations
Return code 2: successive function values within tolerance limit
Log-Likelihood: -25.05386 
1  free parameters
Estimates:
     Estimate Std. error t value Pr(> t)    
[1,]   2.1159     0.2116      10  <2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
--------------------------------------------
> b <- maxLik( ll1i, gr1i, start = 1, method = "BFGSR", finalHessian="bhhh")
>                            # should issue a warning as BHHH not possible
> summary(b )
--------------------------------------------
Maximum Likelihood estimation
BFGSR maximization, 26 iterations
Return code 2: successive function values within tolerance limit
Log-Likelihood: -25.05386 
1  free parameters
Estimates:
     Estimate Std. error t value Pr(> t)    
[1,]   2.1159     0.2145   9.863  <2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
--------------------------------------------
> c <- maxLik( ll1i, gr1i, start = 1, method = "BFGSR", finalHessian=FALSE)
> summary(c)
--------------------------------------------
Maximum Likelihood estimation
BFGSR maximization, 26 iterations
Return code 2: successive function values within tolerance limit
Log-Likelihood: -25.05386 
1  free parameters
Estimates:
     Estimate t value Pr(> t)
[1,]    2.116      NA      NA
--------------------------------------------
> # Estimate with only function values (vector parameter)
> a <- maxLik( ll2, gr2, start = c(0,1), method = "BFGSR" )
> summary(a )
--------------------------------------------
Maximum Likelihood estimation
BFGSR maximization, 22 iterations
Return code 2: successive function values within tolerance limit
Log-Likelihood: -212.7524 
2  free parameters
Estimates:
     Estimate Std. error t value  Pr(> t)    
[1,]   0.8528     0.2031   4.199 2.68e-05 ***
[2,]   2.0309     0.1436  14.144  < 2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
--------------------------------------------
> b <- maxLik( ll2, gr2, start = c(0,1), method = "BFGSR", finalHessian="bhhh")
Warning message:
In maxBFGSRCompute(fn = logLikAttr, fnOrig = fn, gradOrig = grad,  :
  For computing the final Hessian by 'BHHH' method, the log-likelihood or gradient must be supplied by observations
>                            # should issue a warning as BHHH not possible
> summary(b )
--------------------------------------------
Maximum Likelihood estimation
BFGSR maximization, 22 iterations
Return code 2: successive function values within tolerance limit
Log-Likelihood: -212.7524 
2  free parameters
Estimates:
     Estimate t value Pr(> t)
[1,]   0.8528      NA      NA
[2,]   2.0309      NA      NA
--------------------------------------------
> c <- maxLik( ll2, gr2, start = c(0,1), method = "BFGSR", finalHessian=FALSE)
> summary(c)
--------------------------------------------
Maximum Likelihood estimation
BFGSR maximization, 22 iterations
Return code 2: successive function values within tolerance limit
Log-Likelihood: -212.7524 
2  free parameters
Estimates:
     Estimate t value Pr(> t)
[1,]   0.8528      NA      NA
[2,]   2.0309      NA      NA
--------------------------------------------
> 
> 
> ### Nelder-Mead
> ## Individual observations only
> b <- maxLik( ll2i, start = c(0,1), method = "NM", finalHessian="bhhh")
> summary(b)
--------------------------------------------
Maximum Likelihood estimation
Nelder-Mead maximisation, 63 iterations
Return code 0: successful convergence 
Log-Likelihood: -212.7524 
2  free parameters
Estimates:
     Estimate Std. error t value  Pr(> t)    
[1,]   0.8530     0.2032   4.199 2.69e-05 ***
[2,]   2.0312     0.1670  12.163  < 2e-16 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
--------------------------------------------
> ## Individual observations, summed gradient
> b <- maxLik( ll2i, gr2, start = c(0,1), method = "NM", finalHessian="bhhh")
Warning message:
In maxOptim(fn = fn, grad = grad, hess = hess, start = start, method = "Nelder-Mead",  :
  For computing the final Hessian by 'BHHH' method, the log-likelihood or gradient must be supplied by observations
>                            # should issue a warning as BHHH not selected
>                            # (yes, could do it based on individual likelihood and numeric gradient)
> summary(b)
--------------------------------------------
Maximum Likelihood estimation
Nelder-Mead maximisation, 63 iterations
Return code 0: successful convergence 
Log-Likelihood: -212.7524 
2  free parameters
Estimates:
     Estimate t value Pr(> t)
[1,]    0.853      NA      NA
[2,]    2.031      NA      NA
--------------------------------------------
> 
> proc.time()
   user  system elapsed 
  0.386   0.021   0.400 
