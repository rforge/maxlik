
R version 3.2.2 (2015-08-14) -- "Fire Safety"
Copyright (C) 2015 The R Foundation for Statistical Computing
Platform: x86_64-redhat-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(maxLik)
Loading required package: miscTools

Please cite the 'maxLik' package as:
Henningsen, Arne and Toomet, Ott (2011). maxLik: A package for maximum likelihood estimation in R. Computational Statistics 26(3), 443-458. DOI 10.1007/s00180-010-0217-1.

If you have questions, suggestions, or comments regarding the 'maxLik' package, please use a forum or 'tracker' at maxLik's R-Forge site:
https://r-forge.r-project.org/projects/maxlik/
> set.seed(0)
> 
> ## Test standard methods for "lm"
> x <- runif(20)
> y <- x + rnorm(20)
> m <- lm(y ~ x)
> print(nObs(m))
[1] 20
> print(stdEr(m))
(Intercept)           x 
  0.3578623   0.5687071 
> 
> ## Test maxControl methods:
> set.seed(9)
> x <- rnorm(20)
> ll <- function(x) dnorm(x, log=TRUE)
> for(method in c("NR", "BFGS", "BFGSR")) {
+    cat("-- method", method, "--\n")
+    m <- maxLik(ll, start=0, method=method, control=list(iterlim=1))
+    cat("MaxControl structure:\n")
+    show(maxControl(m))
+ }
-- method NR --
MaxControl structure:
A 'MaxControl' object with slots:
tol = 1e-08 
reltol = 1.490116e-08 
gradtol = 1e-06 
steptol = 1e-10 
lambdatol = 1e-06 
qrtol = 1e-10 
qac = stephalving 
marquardt_lambda0 = 0.01 
marquardt_lambdaStep = 2 
marquardt_maxLambda = 1e+12 
nm_alpha = 1 
nm_beta = 0.5 
nm_gamma = 2 
sann_cand = <default Gaussian Markov kernel>
sann_temp = 10 
sann_tmax = 10 
sann_randomSeed = 123 
iterlim = 1 
printLevel = 0 
-- method BFGS --
MaxControl structure:
A 'MaxControl' object with slots:
tol = 1e-08 
reltol = 1.490116e-08 
gradtol = 1e-06 
steptol = 1e-10 
lambdatol = 1e-06 
qrtol = 1e-10 
qac = stephalving 
marquardt_lambda0 = 0.01 
marquardt_lambdaStep = 2 
marquardt_maxLambda = 1e+12 
nm_alpha = 1 
nm_beta = 0.5 
nm_gamma = 2 
sann_cand = <default Gaussian Markov kernel>
sann_temp = 10 
sann_tmax = 10 
sann_randomSeed = 123 
iterlim = 1 
printLevel = 0 
-- method BFGSR --
MaxControl structure:
A 'MaxControl' object with slots:
tol = 1e-08 
reltol = 1.490116e-08 
gradtol = 1e-06 
steptol = 1e-10 
lambdatol = 1e-06 
qrtol = 1e-10 
qac = stephalving 
marquardt_lambda0 = 0.01 
marquardt_lambdaStep = 2 
marquardt_maxLambda = 1e+12 
nm_alpha = 1 
nm_beta = 0.5 
nm_gamma = 2 
sann_cand = <default Gaussian Markov kernel>
sann_temp = 10 
sann_tmax = 10 
sann_randomSeed = 123 
iterlim = 1 
printLevel = 0 
> 
> proc.time()
   user  system elapsed 
  0.450   0.032   0.474 
